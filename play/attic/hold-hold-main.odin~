package odin2ghp

import "core:os"
import "core:fmt"

main :: proc() {
  fmt.println("--- begin ---")
  s : string = "pault"
  transportable_s := transmute([]u8)s
  fmt.println(len(s), s, len(transportable_s), transportable_s)

  i : u8 = 7
  transportable_i := []u8{i}
  fmt.println(i, len(transportable_i), transportable_i)
  
  fmt.println("--- end");
}

// bool b8 b16 b32 b64 // booleans

// // integers
// int  i8 i16 i32 i64 i128
// uint u8 u16 u32 u64 u128 uintptr

// // endian specific integers
// i16le i32le i64le i128le u16le u32le u64le u128le // little endian
// i16be i32be i64be i128be u16be u32be u64be u128be // big endian

// f16 f32 f64 // floating point numbers

// // endian specific floating point numbers
// f16le f32le f64le // little endian
// f16be f32be f64be // big endian

// complex32 complex64 complex128 // complex numbers

// quaternion64 quaternion128 quaternion256 // quaternion numbers

// rune // signed 32 bit integer
// 	 // represents a Unicode code point
// 	 // is a distinct type to `i32`

// // strings
// string cstring

// // raw pointer type
// rawptr

// // runtime type information specific type
// typeid
// any
